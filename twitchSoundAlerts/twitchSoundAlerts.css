@import url('https://fonts.googleapis.com/css?family={{fontFamily}}');
:root {
  --alertSize: {{alertSize}}px;
  --alertDuration: 5s; /*overridden in js*/
  --textAlign: center;
  --alertSpawnLocation: {{alertSpawnLocation}};
  --alertImageLocation: {{alertImageLocation}};
  --fontFamily: {{fontFamily}};
  --fontSize: {{fontSize}}px;
  --fontAlignment: {{fontAlignment}};
  --fontPaddingLeft: {{fontPaddingLeft}}px;
  --fontPaddingRight: {{fontPaddingRight}}px;

  --alertRadiusUL: {{alertRadiusUL}}px;
  --alertRadiusUR: {{alertRadiusUR}}px;
  --alertRadiusLR: {{alertRadiusLR}}px;
  --alertRadiusLL: {{alertRadiusLL}}px;

  --imageRadiusUL: {{imageRadiusUL}}px;
  --imageRadiusUR: {{imageRadiusUR}}px;
  --imageRadiusLR: {{imageRadiusLR}}px;
  --imageRadiusLL: {{imageRadiusLL}}px;

  --radiusType: var(--{{radiusType}});

  --alertRadius: var(--alertRadiusUL) var(--alertRadiusUR) var(--alertRadiusLR) var(--alertRadiusLL);
  --imageRadius: var(--imageRadiusUL) var(--imageRadiusUR) var(--imageRadiusLR) var(--imageRadiusLL);

  --fadeinTime: {{fadeinTime}}s;
  --fadeinFunction: {{fadeinFunction}};

  --expandTime: {{expandTime}}s;
  --expandFunction: {{expandFunction}};

  --stayDelay: calc(var(--fadeinTime) + var(--expandTime));

  --shrinkTime: {{shrinkTime}}s;
  --shrinkFunction: {{shrinkFunction}};
  --shrinkDelay: calc(var(--alertDuration) + var(--stayDelay));

  --fadeoutTime: {{fadeoutTime}}s;
  --fadeoutFunction: {{fadeoutFunction}};
  --fadeoutDelay: calc(var(--shrinkTime) + var(--shrinkDelay))
  /*pjonp should learn anime.js*/
}

#TpsInfo {
  font-size: 26px;
}

#main {
  width: 100%;
  height: 100%;
  font-family: var(--fontFamily);
  font-size: var(--fontSize);
  display: flex;
  justify-content: var(--alertSpawnLocation); /* main alert on left or right or center: flex-start/center/end*/
}
.event{
  max-width: var(--alertSize);
  height: var(--alertSize);
  display: flex;
  flex-direction: var(--alertImageLocation); /* image on left or right: row/row-reverse */
  overflow: hidden;
  border-radius: var(--radiusType);
  box-sizing: border-box;
  box-shadow: 0 0 calc( var(--alertSize) / 4) rgba(255,255,255,.5),
	inset 0px 0px calc( var(--alertSize) / 2) calc( var(--alertSize) / 8) rgba(0,0,0,0.5);
}
.eventImgContainer{
  width: var(--alertSize);
  height: var(--alertSize);
  box-sizing: border-box;
  border-radius: var(--imageRadius);
  background-position: center;
  background-repeat: no-repeat;
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: var(--alertSize);
}
.eventText{
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: var(--fontAlignment);
  justify-content: space-around;
  flex-basis: 100%;
  overflow: hidden;
  white-space: nowrap;
  padding-left: var(--fontPaddingLeft);
  padding-right: var(--fontPaddingRight);
}

.animate {
    animation: fadein var(--fadeinTime) var(--fadeinFunction),
      expand var(--expandTime) var(--expandFunction) var(--fadeinTime) forwards,
      stay var(--alertDuration) ease-in var(--stayDelay),
      shrink var(--shrinkTime) var(--shrinkFunction) var(--shrinkDelay) forwards,
      fadeout var(--fadeoutTime) var(--fadeoutFunction) var(--fadeoutDelay) forwards;
}

@keyframes fadein {
    from {opacity: 0}
    to {opacity: 1}
}
@keyframes expand {
    from {max-width: var(--alertSize)}
    to {max-width: 100%; border-radius: var(--alertRadius)}
}
@keyframes stay {
    from {max-width: 100%;}
    to {max-width: 100%;}
}
@keyframes shrink {
    from {max-width: 100%;}
    to {max-width: var(--alertSize);border-radius: var(--radiusType)}
}
@keyframes fadeout {
    from {opacity: 1}
    to {opacity: 0}
}
